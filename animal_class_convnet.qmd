---
title: "Dog/Cat classification using Convnet"
format: html
editor: visual
---

## Classifying Dogs and Cats using Convnet

For this project, we'll use a small dataset of 5000 images of cats and dogs (50/50 split). - We'll use 2000 images for training, 1000 for validation, and 2000 for testing.

### Plan of action

1.  Naively train a small convnet on the training sample without any regularization to set a baseline (\~70%)
2.  Use data augmentation to mitigate overfitting for computer vision (improve \~80-85%)
3.  Apply feature extraction with pre-trained model (\~97.5%)
4.  Apply fine-tuning a pre-trained model (\~98.5%)

```{r}
library(fs)
library(keras3)
```

### Data

We'll download the data from Kaggle through their API.

```{r, eval = FALSE}
library(fs) dir_create("~/.kaggle") 
file_move("~/Downloads/kaggle.json", "~/.kaggle/") 
file_chmod("~/.kaggle/kaggle.json", "0600")

reticulate::py_install("kaggle", pip = TRUE)
```

```{r}
# Force reticulate to initialize python
op_add(1, 1)

# Now 'kaggle' should be on the PATH
nzchar(Sys.which("kaggle"))
system('kaggle competitions download -c dogs-vs-cats')
```
